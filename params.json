{
  "name": "Melody",
  "tagline": "Easy web installer for redistribuing Symfony projects",
  "body": "# melody\r\nEasy web installer for redistribuing Symfony projects.\r\n\r\n---\r\n\r\nMelody is a simple web installer for deploying and delivering a Symfony project to people who don't want or can't execute manual installation.\r\n\r\n## Features\r\n- Install a given zip containing a Symfony project\r\n- Possibility to define if the zip contains vendors too\r\n- Possibility to define if the assets are already in the ```web``` folder\r\n- Possibility to give a sql file to dump during the installing process\r\n- Possibility to perform custom bash commands after the install process\r\n- Check the system if it match with your requirements\r\n- Check if the installer will need to perform PHP CLI commands and if the system support this feature\r\n- Lock system which prevent multiple users using the installer at the same time\r\n- Fully customizable layout and process\r\n- Automatic breadcrumbs\r\n- The installer remove itself at the end of the process\r\n\r\n## How to create the installer\r\n\r\nThere is a lot of steps and options to configure to create the installer for your Symfony project, but the hardest part is already done. All you have to to is :\r\n\r\n- providing the files (zip and, if you want, sql)\r\n- configuring the file ```config.yml```\r\n\r\nThe first step may be easy, but the second one need some explanations. Here is a complete version of the config file :\r\n```\r\narchive:\r\n    # Required\r\n    # The name of the zip containing your Symfony project\r\n    # and located in the 'resources' folder\r\n    filename: 'archive.zip'\r\n\r\n    # Optional, default : false\r\n    # Indicate if the zip contains the vendors too\r\n    # Required if the server can't execute shell, like a shared hosting\r\n    contains_vendors: false\r\n\r\n    # Optional, default : false\r\n    # Indicate if the zip already contains the bundle's assets in /web\r\n    # Required if the server can't execute shell, like a shared hosting\r\n    contains_installed_assets: false\r\n\r\n# Required\r\n# The list of requirements (taken from the PHPinfo)\r\n# Use names to clearly identify sections (like 'PHP' and 'Apache')\r\n# Key is the path of the field to check\r\n# Value is the required value\r\n# use < or <= or > or >= to compare number and version number\r\n# use ~ to find the value somewhere in the string\r\n# Message is the error message to display if the requirement does not match\r\nrequirements:\r\n    PHP:\r\n        - {key: 'Core.PHP Version', value: '>=5.3', message: 'The PHP version must be 5.3 or upper'}\r\n        - {key: 'Core.PHP Version', value: '<7', message: 'The PHP version must be lower than 7'}\r\n        - {key: 'PDO.PDO support', value: 'enabled', message: 'PHP PDO module must be installed and enabled'}\r\n        - {key: 'PDO.PDO drivers', value: '~mysql', message: 'PHP PDO module must support MySQL databases'}\r\n        - {key: 'ctype.ctype functions', value: 'enabled', message: 'PHP ctype module must be installed and enabled'}\r\n        - {key: 'json.json support', value: 'enabled', message: 'PHP json module must be installed and enabled'}\r\n    Apache:\r\n        - {key: 'apache2handler.Loaded Modules', value: '~mod_rewrite', message: 'Modue rewrite must be installed and enabled'}\r\n\r\n# Optional, default : null\r\n# The name of the sql file to import during the installation\r\n# and located in the 'resources' folder\r\nsql: 'dump.sql'\r\n\r\n# Optional, default : null\r\n# The list of bash commands to execute after the installation\r\nafter_install:\r\n    - 'php bin/console assets:install --env=prod'\r\n    - 'php bin/console assetic:dump --env=prod'\r\n\r\n# Required\r\n# The list of steps to display in the breadcrumbs\r\nsteps:\r\n    - 'Start'\r\n    - 'Checking'\r\n    - 'Install'\r\n    - 'Finalise'\r\n\r\n# Required\r\n# The title of the installer\r\ntitle: \"Melody Installer\"\r\n\r\n```\r\n\r\nAs you can see, there is a lot of options, but everything is in this only file, so take the time to clearly understand what every key exactly do.\r\n\r\nOnce everything is configured, don't forget to change the layout of the installer to match with your. You change anything you want. And if your are a developer, feel free to add/edit/remove steps in the process to match with your expectations. The ony thing you have to do is playing with the smalls php files at the root of the installer.\r\n\r\nYou can change the name of the installer's folder too. If you don't like ```my_site/melody``` you can rename to ```my_site/install``` or even ```my_site/whatever``` if you want to.\r\n\r\nOnce everything is OK, don't forget to play your installer to see if everything is OK, but ALWAYS BACKUP YOUR INSTALLER FIRST !\r\n\r\nNow you can zip everything and spread your installer to the world.\r\n\r\n### Using the installer as a client\r\n- Unzip the content of the installer in ```/var/www/my_website/web/melody```\r\n- Go to http://my_website/melody\r\n- Install\r\n- Enjoy\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}